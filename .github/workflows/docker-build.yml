name: 🐳 Build Docker Image

on:
  workflow_call:
    inputs:
      image_tag:
        required: true
        type: string
      push_to_ecr:
        required: false
        type: boolean
        default: false
    outputs:
      image_uri:
        description: "Built Docker image URI"
        value: ${{ jobs.build.outputs.image_uri }}
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: nestjs-notes-todo

jobs:
  build:
    name: Build and Push
    runs-on: ubuntu-latest
    
    outputs:
      image_uri: ${{ steps.build-image.outputs.image }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      if: inputs.push_to_ecr
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      if: inputs.push_to_ecr
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build Docker image
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ inputs.image_tag }}
      run: |
        echo "🔨 Building Docker image..."
        
        if [ "${{ inputs.push_to_ecr }}" = "true" ]; then
          IMAGE_URI=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker build --target production -t $IMAGE_URI .
          docker tag $IMAGE_URI $ECR_REGISTRY/$ECR_REPOSITORY:latest
          
          echo "📤 Pushing to ECR..."
          docker push $IMAGE_URI
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
          
          echo "image=$IMAGE_URI" >> $GITHUB_OUTPUT
        else
          docker build --target production -t $ECR_REPOSITORY:$IMAGE_TAG .
          echo "image=$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
        fi

    - name: Image security scan
      if: inputs.push_to_ecr
      run: |
        aws ecr start-image-scan \
          --repository-name $ECR_REPOSITORY \
          --image-id imageTag=${{ inputs.image_tag }} \
          --region ${{ env.AWS_REGION }}
