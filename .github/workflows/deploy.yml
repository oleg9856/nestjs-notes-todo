name: üöÄ Deploy to AWS

on:
  workflow_dispatch:
    inputs:
      confirm_deploy:
        description: 'Type "DEPLOY" to confirm'
        required: true
        type: string
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
    

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: nestjs-notes-todo

jobs:
  confirm:
    name: üîí Confirm Deployment
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    
    steps:
    - name: Validate confirmation
      run: |
        if [ "${{ github.event.inputs.confirm_deploy }}" != "DEPLOY" ]; then
          echo "‚ùå Confirmation failed. You must type exactly 'DEPLOY' to proceed."
          exit 1
        fi
        echo "‚úÖ Confirmation validated. Proceeding with deployment..."

  deploy:
    runs-on: ubuntu-latest
    needs: [confirm]
    if: always() && (needs.confirm.result == 'success' || github.event_name != 'workflow_dispatch')

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm install

    - name: Run linting and tests
      run: |
        npm run lint
        npm run test

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

    - name: Install Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.5.0

    - name: Apply Terraform changes
      working-directory: ./terraform
      env:
        TF_VAR_database_uri: ${{secrets.DATABASE_URI}}
      run: |
        terraform init
        terraform plan
        terraform apply -auto-approve