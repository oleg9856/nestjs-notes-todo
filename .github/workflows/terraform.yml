name: 🏗️ Terraform Infrastructure

on:
  workflow_call:
    inputs:
      terraform_action:
        required: true
        type: string  # plan, apply, destroy
      image_tag:
        required: true
        type: string
    outputs:
      load_balancer_url:
        description: "Load Balancer URL"
        value: ${{ jobs.terraform.outputs.load_balancer_url }}
    secrets:
      DATABASE_URI:
        required: true
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true

env:
  AWS_REGION: us-east-1

jobs:
  terraform:
    name: ${{ inputs.terraform_action }}
    runs-on: ubuntu-latest
    
    outputs:
      load_balancer_url: ${{ steps.terraform-output.outputs.url }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.5.0
        terraform_wrapper: false

    - name: Terraform Init
      working-directory: ./terraform
      run: terraform init

    - name: Terraform Validate
      working-directory: ./terraform
      run: terraform validate

    - name: Terraform Plan
      if: inputs.terraform_action == 'plan' || inputs.terraform_action == 'apply'
      working-directory: ./terraform
      env:
        TF_VAR_database_uri: ${{ secrets.DATABASE_URI }}
        TF_VAR_image_tag: ${{ inputs.image_tag }}
      run: |
        terraform plan -no-color -out=tfplan
        terraform show -no-color tfplan

    - name: Terraform Apply
      if: inputs.terraform_action == 'apply'
      working-directory: ./terraform
      env:
        TF_VAR_database_uri: ${{ secrets.DATABASE_URI }}
        TF_VAR_image_tag: ${{ inputs.image_tag }}
      run: terraform apply -auto-approve -no-color

    - name: Terraform Destroy
      if: inputs.terraform_action == 'destroy'
      working-directory: ./terraform
      env:
        TF_VAR_database_uri: ${{ secrets.DATABASE_URI }}
        TF_VAR_image_tag: ${{ inputs.image_tag }}
      run: terraform destroy -auto-approve -no-color

    - name: Get Terraform Outputs
      if: inputs.terraform_action == 'apply'
      id: terraform-output
      working-directory: ./terraform
      run: |
        URL=$(terraform output -raw load_balancer_url 2>/dev/null || echo "")
        echo "url=$URL" >> $GITHUB_OUTPUT
